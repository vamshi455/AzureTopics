
1.	Pick a query which is not using any Hash Distribution in the tables which it has.  Note the time it takes before we optimize it
2.	Extract dw.******_dim tables from the query (we are interested only in dw schema tables)
3.	Pick one dw.******_dim Table to search for Best Hash Key Column(algorithm)  
4.	Make a temp table (name: dw.******_dim_poc) using CTAS from the picked dw.******_dim to check the performance and later rename this table to make it look like actual table
5.	Ignore Date Types, Float types(algorithm)
6.	Pick Columns which has count of distinct values > 60 (algorithm) 
7.	Loop through the above List columns and get data distribution (algorithm)
8.	Look for the column which has even distribution of data (manual)
9.	Create a CTAS table from the actual table but with chosen Hash Distribution key
10.	Test the performance by executing the query by replacing tmp dw.*****_dim_poc table, If performance is good then consider the hash key else pick another column from step 6 and try to repeat steps 7,8.
11.	Once we lock the Hash key, we can drop the existing table and rename the temp table to actual table name
