DECLARE @COUNT INT,
		@LOOP INT,
		@LOOP_INNER INT,
		@TABLENAME VARCHAR(MAX),
		@COLUMNNAME VARCHAR(MAX),
		@SCHEMANAME VARCHAR(MAX), 
		@ROWID INT,
		@SQL VARCHAR(MAX)
SET @LOOP = 0
SET @LOOP_INNER = 0
SET @SQL = ''

IF OBJECT_ID('tempdb..#TMPTABLECOL') IS NOT NULL BEGIN DROP TABLE #TMPTABLECOL END
CREATE TABLE  #TMPTABLECOL ( SCHEMANAME VARCHAR(100), OBJ_ID VARCHAR(100), COLUMNNAME VARCHAR(100) )

IF OBJECT_ID('tempdb..#TMPGROUPDATA') IS NOT NULL BEGIN DROP TABLE #TMPGROUPDATA END
CREATE TABLE  #TMPGROUPDATA (SCHEMANAME VARCHAR(100), TABLENAME VARCHAR(100), COLUMNNAME VARCHAR(100) ,GROUPCOUNT INT)

IF OBJECT_ID('tempdb..#TMPGROUPDATABYCOLUMN') IS NOT NULL BEGIN DROP TABLE #TMPGROUPDATABYCOLUMN END
CREATE TABLE  #TMPGROUPDATABYCOLUMN ( TABLENAME VARCHAR(100), COLUMNNAME VARCHAR(100) , COLUMNVALUE VARCHAR(100), COLUMNCOUNT INT)

INSERT INTO #TMPTABLECOL(SCHEMANAME, OBJ_ID, COLUMNNAME)
SELECT DISTINCT S.NAME AS SCHEMANAME, T.OBJECT_ID AS OBJ_ID , C.NAME AS COLUMNNAME FROM SYS.COLUMNS C INNER JOIN SYS.TABLES T ON C.OBJECT_ID = T.OBJECT_ID 
INNER JOIN SYS.SCHEMAS S ON S.SCHEMA_ID = T.SCHEMA_ID 
WHERE C.OBJECT_ID = OBJECT_ID('dw.DEAL_HEADER_DIM_POC_TEST_RB')  AND C.SYSTEM_TYPE_ID  IN (56, 167, 175, 231 , 239)  --FILTER ONLY CHAR,VARCHAR, INT - REST OF THEM IGNORE

PRINT('--STEP 1: STARTING FIRST GROUP BY QUERIES--')
WHILE @LOOP <= (SELECT COUNT(1 ) FROM #TMPTABLECOL)
BEGIN
    --PRINT(@LOOP)
	SELECT  @TABLENAME = OBJECT_NAME(OBJ_ID), @SCHEMANAME = SCHEMANAME, @COLUMNNAME = COLUMNNAME FROM (SELECT ROW_NUMBER() OVER (ORDER BY COLUMNNAME) ROWID, SCHEMANAME, OBJ_ID, COLUMNNAME FROM #TMPTABLECOL ) A WHERE ROWID = @LOOP

	--GET INTO A TEMP TABLE 
	SET @SQL = 'INSERT INTO #TMPGROUPDATA SELECT ''' + @SCHEMANAME + ''',''' + @TABLENAME  +  ''', ''' + @COLUMNNAME + ''' , COUNT(1) AS COUNTOFGROUP FROM (SELECT ' + @COLUMNNAME  + ', COUNT(1) AS COUNTOFGROUP FROM '+ @SCHEMANAME + '.' + @TABLENAME + ' GROUP BY ' + @COLUMNNAME + ') A  HAVING COUNT(1) > 60'
	PRINT(@SQL)
	EXEC(@SQL)
		
	SET @LOOP = @LOOP + 1
END

--SELECT * FROM #TMPGROUPDATA 

PRINT('--STEP 2: FILTERED COLUMNS AND GETTING GROUP BY QUERIES--')
WHILE @LOOP_INNER < (SELECT COUNT(1) FROM #TMPGROUPDATA WHERE GROUPCOUNT BETWEEN 60 AND 400 )
BEGIN
	SELECT  @TABLENAME  = TABLENAME,
	        @SCHEMANAME = SCHEMANAME,
			@COLUMNNAME = COLUMNNAME
    FROM (SELECT ROW_NUMBER() OVER (ORDER BY COLUMNNAME) ROWID, SCHEMANAME, TABLENAME, COLUMNNAME FROM #TMPGROUPDATA WHERE GROUPCOUNT BETWEEN 60 AND 400 ) A WHERE ROWID = @LOOP_INNER
	
	SET @SQL = 'INSERT INTO #TMPGROUPDATABYCOLUMN SELECT ''' + @TABLENAME + ''',''' + @COLUMNNAME + ''',' + @COLUMNNAME + ', COUNT(1) FROM '+ @SCHEMANAME + '.' + @TABLENAME + ' GROUP BY ' + @COLUMNNAME
	EXEC(@SQL)

	SET @LOOP_INNER = @LOOP_INNER + 1
END

SELECT * FROM #TMPGROUPDATABYCOLUMN --ORDER BY COLUMNDISTCOUNT DESC
